
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream dark_service {
        server    darkService_ip:port;
    }
    
    upstream quark_service {
        server    quarkService_ip:temp_port;
    }
     
    server {
        #Using quark's port temporarily
        listen       9292;
        server_name  localhost;
        
        location /v2.0/network {
            content_by_lua '
                token = ngx.req.get_headers()["X-Auth-Token"];
                decoded_token = ngx.decode_base64(token)
                domain_id = "quark_domain_id"
                result = string.find(decoded_token, domain_id)
                --If the request not from quark_domain, just multi request.
                if(result == nil)
                then
                    quark_res, dark_res = ngx.location.capture_multi{
                        {"/quark_service", {args = ngx.location.get_uri_args()}},
                        "/dark_service", {args = ngx.location.get_uri_args()}},
                    }
                    return quark_res
                else
                    quark_res, offline_quark_res, dark_res = ngx.location.capture_multi{
                        {"/dark_service", {args = ngx.req.get_uri_args()}},
                        {"/offiline_quark_service", {args = ngx.req.get_uri_args()}}, 
                        {"/quark_service", {args = ngx.req.get_uri_args()}},
                    }
                    return quark_res;
            ';
       }

        location /dark_service {
            proxy_pass http://dark_service_ip:port;
        }

        location /online_quark_service {
            proxy_pass http://online_quark_service_ip:port;
        }

        location /offline_quark_service {
            proxy_pass http://offline_quark_service_ip:port;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
